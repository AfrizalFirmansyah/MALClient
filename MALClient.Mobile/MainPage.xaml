<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MALClient"
    xmlns:controls="using:MALClient.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xamlConverters="using:MALClient.Shared.XamlConverters"
    xmlns:userControls="using:MALClient.Shared.UserControls"
    x:Class="MALClient.MainPage"
    mc:Ignorable="d">

    <Page.Resources>
        <xamlConverters:VisiblityInverterConverter x:Key="VisiblityInverterConverter" />
        <xamlConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <xamlConverters:SearchFilterStatusToBrushConverter x:Key="SearchFilterStatusToBrushConverter" />
        <Storyboard x:Name="FadeInPinDialogStoryboard">
            <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                             EnableDependentAnimation="True" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="PinDialogInner" FromVerticalOffset="-20"
                                 FromHorizontalOffset="0" />
        </Storyboard>
        <Storyboard x:Name="FadeOutPinDialogStoryboard">
            <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                             EnableDependentAnimation="True" From="1" To="0" />
            <PopOutThemeAnimation Storyboard.TargetName="PinDialogInner" />
        </Storyboard>
        <Storyboard x:Name="FadeInCurrentStatus" SpeedRatio="1">
            <DoubleAnimation Storyboard.TargetName="CurrentStatus" Storyboard.TargetProperty="Opacity" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="CurrentStatus" FromVerticalOffset="30" FromHorizontalOffset="0" />
        </Storyboard>
        <Storyboard x:Name="FadeInCurrentSubStatus" SpeedRatio="1">
            <DoubleAnimation Storyboard.TargetName="CurrentStatusSub" Storyboard.TargetProperty="Opacity"  From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="CurrentStatusSub" FromVerticalOffset="30" FromHorizontalOffset="0"  />
        </Storyboard>
    </Page.Resources>

    <Page.DataContext>
        <Binding Path="Main" Source="{StaticResource MobileLocator}" />
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactInline"></Setter>
                    </VisualState.Setters>
                </VisualState>                
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactOverlay"></Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="0"
              Background="{ThemeResource BrushAppBars}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>
            <Button IsTabStop="False" HorizontalAlignment="Left" FontWeight="Bold" FontFamily="Segoe MDL2 Assets"
                    Content="&#xE700;"
                    Width="45" Height="45" Background="Transparent" FontSize="20"
                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                    Command="{Binding ReversePaneCommand}" />
            <Grid Grid.Column="1" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="CurrentStatus"  FontWeight="Bold" Text="{Binding CurrentStatus}"
                       TextTrimming="CharacterEllipsis" IsTextSelectionEnabled="{Binding IsCurrentStatusSelectable}"
                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Tapped="CurrentStatus_OnTapped"
                       Visibility="{Binding Visibility, Converter={StaticResource VisiblityInverterConverter}, ElementName=SearchInput}">
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout x:Name="CurrentStatusListFilterSelectorFlyout">
                            <MenuFlyoutItem Text="{Binding Source={StaticResource MobileLocator},Path=AnimeList.Filter1Label}"
                                            Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="0" />
                            <MenuFlyoutItem Text="Completed" Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="1" />
                            <MenuFlyoutItem Text="On hold" Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="2" />
                            <MenuFlyoutItem Text="Dropped" Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="3" />
                            <MenuFlyoutItem Text="{Binding Source={StaticResource MobileLocator},Path=AnimeList.Filter5Label}"
                                            Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="4" />                            
                            <MenuFlyoutItem Text="{Binding Source={StaticResource MobileLocator},Path=AnimeList.StatusAllLabel}"
                                            Command="{Binding ChangeStatusCommand}"
                                            CommandParameter="5" />
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
                </TextBlock>
                <TextBlock Grid.Column="1" x:Name="CurrentStatusSub" FontWeight="Normal" Text="{Binding CurrentStatusSub}"
                        TextTrimming="CharacterEllipsis" FontSize="12" Foreground="{ThemeResource BrushSettingsSubtitle}"
                        VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0"
                        Visibility="{Binding Visibility, Converter={StaticResource VisiblityInverterConverter}, ElementName=SearchInput}" />
            </Grid>



            <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AutoSuggestBox  x:Name="SearchInput" ItemsSource="{Binding CurrentHintSet}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                         KeyDown="SearchInput_OnKeyDown" QuerySubmitted="SearchInput_OnQuerySubmitted"
                         Text="{Binding CurrentSearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Visibility="{Binding SearchInputVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                         PlaceholderText="Search..." />
                <Button IsTabStop="False" Grid.Column="1" Background="Transparent" Height="48" Width="45"
                        Visibility="{Binding SearchFilterButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Flyout>
                        <Flyout>
                            <ListView ItemsSource="{Binding SearchFilterOptions}"
                                      SelectedIndex="{Binding SearchFilterSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Flyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="Filter" Foreground="{Binding IsSearchFilterActive,Converter={StaticResource SearchFilterStatusToBrushConverter}}" />
                </Button>
                <Button IsTabStop="False" Grid.Column="1" Background="Transparent" Height="48" Width="45"
                        Visibility="{Binding ScrollToTopButtonVisibility}" Command="{Binding GoTopCommand}">
                    <SymbolIcon Symbol="Up" />
                </Button>
            </Grid>
            <userControls:LockableToggleButton IsTabStop="False" LockToggle="{Binding SearchToggleLock}"
                                           HorizontalAlignment="Right" IsThreeState="False"
                                           VerticalAlignment="Center" Width="45" Height="48" Grid.Column="2"
                                           Background="Transparent" Click="ToggleButton_OnClick"
                                           IsChecked="{Binding SearchToggleStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                           Command="{Binding ToggleSearchCommand}"
                                           Visibility="{Binding SearchToggleVisibility, Converter={StaticResource BoolToVisibilityConverter}}">
                <SymbolIcon Symbol="Find" />
            </userControls:LockableToggleButton>
            <Button IsTabStop="False" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Width="45" Height="48" Grid.Column="2" Background="Transparent"
                    Command="{Binding RefreshDataCommand}"
                    Visibility="{Binding RefreshButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                <SymbolIcon Symbol="Refresh" />
            </Button>
        </Grid>
        <SplitView x:Name="MainSplitView" IsTabStop="False" VerticalAlignment="Stretch" CompactPaneLength="0" OpenPaneLength="220"
                   IsPaneOpen="{x:Bind ViewModel.MenuPaneState, Mode=TwoWay}"
                   DisplayMode="CompactOverlay" Grid.Row="1">
            <SplitView.Pane>
                <controls:HamburgerControl />
            </SplitView.Pane>
            <SplitView.Content>
                <Frame x:Name="MainContent" />
            </SplitView.Content>
        </SplitView>
        <Grid x:Name="PinDialog" Opacity="0" DataContext="{Binding Source={StaticResource UwpLocator},Path=PinTileDialog}"
              Visibility="{Binding GeneralVisibility}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1"
              Background="{ThemeResource BrushPinTileDialogOverlay}" Tapped="PinDialog_OnTapped">
            <Grid x:Name="PinDialogInner" Margin="15,15,15,55"
                  Background="{ThemeResource BrushPinTileDialogBackground}" VerticalAlignment="Center"
                  HorizontalAlignment="Stretch" MaxWidth="450" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="Pin tile" FontWeight="Normal" HorizontalAlignment="Left" FontSize="30" />
                    <TextBlock Text="{Binding EntryData.Title}" FontWeight="SemiLight" HorizontalAlignment="Left"
                               Margin="0,5" />
                </StackPanel>
                <Button Width="50" Height="50" VerticalAlignment="Top" Grid.Row="0" Margin="0,-5,-5,0"
                        HorizontalAlignment="Right" Background="Transparent" BorderThickness="0"
                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                        Command="{Binding CloseDialogCommand}">
                    <SymbolIcon Symbol="Clear" />
                </Button>
                <MenuFlyoutSeparator Grid.Row="1" />
                <ScrollViewer Margin="0,5,0,0" Grid.Row="2" x:Name="ScrollView" Padding="0,0,10,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel HorizontalAlignment="Stretch" Margin="0,5,0,0">
                            <TextBlock Text="Tile action:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedActionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Open website" />
                                    <ComboBoxItem Content="{Binding OpenWebsiteText}" />
                                    <ComboBoxItem Content="Open in app" />
                                </ComboBox.Items>
                            </ComboBox>
                            <TextBox Margin="5,10" PlaceholderText="Desired url..."
                                     Text="{Binding TargetUrl,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding UrlInputVisibility}" HorizontalAlignment="Stretch" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,10,0,0">
                            <TextBlock Text="Tile image:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedImageOptionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Stock cover image" />
                                    <ComboBoxItem Content="None" />
                                </ComboBox.Items>
                            </ComboBox>
                            <Grid HorizontalAlignment="Stretch" Visibility="{Binding ImagePreviewVisibility}">
                                <Pivot PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                    <Pivot.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                                       PointerWheelChanged="PinPivotItem_OnPointerWheelChanged" />
                                        </DataTemplate>
                                    </Pivot.HeaderTemplate>
                                    <PivotItem Header="Normal" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageNormal}"
                                                                         DesiredAspectRatio="1.0"
                                                                         Width="200" Height="320"
                                                                         VerticalAlignment="Center"
                                                                         HorizontalAlignment="Center"
                                                                         CropLeft="{Binding CropLeft,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropTop="{Binding CropTop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropWidth="{Binding CropWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropHeight="{Binding CropHeight,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <userControls:CropControl.Style>
                                                    <Style
                                                        TargetType="userControls:CropControl">
                                                        <Setter
                                                            Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                    <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                        <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                    </Canvas>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                                        Background="Transparent" BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        IsEnabled="{Binding IsCropEnabled}"
                                                        Command="{Binding CropImageCommand}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                    <PivotItem Header="Wide" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageWide}"
                                                                         DesiredAspectRatio="2.0"
                                                                         Width="200" Height="320"
                                                                         VerticalAlignment="Center"
                                                                         HorizontalAlignment="Center"
                                                                         CropLeft="{Binding CropLeftWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropTop="{Binding CropTopWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropWidth="{Binding CropWidthWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                         CropHeight="{Binding CropHeightWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <userControls:CropControl.Style>
                                                <Style
                                                        TargetType="userControls:CropControl">
                                                    <Setter
                                                            Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                    <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoWideCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoWideCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button VerticalAlignment="Center" Background="Transparent"
                                                        BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        Command="{Binding CropWideImageCommand}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                </Pivot>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,6,0,0">
                            <TextBlock Text="Tile contents:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <StackPanel Margin="25,0,0,0">
                                    <CheckBox x:Name="PinDialogTitleCheckbox" Content="Title"
                                              IsChecked="{Binding PinSettings.AddTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Big title"
                                              IsEnabled="{Binding ElementName=PinDialogTitleCheckbox,Path=IsChecked}"
                                              IsChecked="{Binding PinSettings.BigTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Status"
                                              IsChecked="{Binding PinSettings.AddStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Watched"
                                              IsChecked="{Binding PinSettings.AddWatched,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Air day"
                                              IsChecked="{Binding PinSettings.AddAirDay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Branding"
                                              IsChecked="{Binding PinSettings.AddBranding,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Score"
                                              IsChecked="{Binding PinSettings.AddScore,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Image"
                                              IsChecked="{Binding PinSettings.AddImage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <Button Grid.Row="3" Margin="5,6,5,0" Content="Pin" HorizontalAlignment="Stretch"
                                Command="{Binding PinThingCommand}" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Page>