<Page
    x:Class="MALClient.Pages.Main.AnimeListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xamlConverters="using:MALClient.Shared.XamlConverters"
    xmlns:items="using:MALClient.Shared.Items"
    xmlns:userControls="using:MALClient.Shared.UserControls"
    xmlns:anime="using:MALClient.Models.Models.Anime"
    DataContext="{Binding AnimeList , Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <xamlConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <xamlConverters:DisplayModeToPresenterControlVisibility x:Key="DisplayModeToPresenterControlVisibility" />
        <xamlConverters:VisiblityInverterConverter x:Key="VisiblityInverterConverter" />
        <x:String x:Key="IndefiniteCompactListString">IndefiniteCompactList</x:String>
        <x:String x:Key="IndefiniteListString">IndefiniteList</x:String>
        <x:String x:Key="IndefiniteGridString">IndefiniteGrid</x:String>
        <xamlConverters:BoolToVisibilityInvertedConverter x:Key="BoolToVisibilityInvertedConverter" />
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar x:Name="BottomCommandBar" Background="{ThemeResource BrushAppBars}">
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Shuffle" Label="Select one at random" Command="{Binding SelectAtRandomCommand}"></AppBarButton>
                <AppBarButton Icon="Refresh" Label="Go back to my list" Command="{Binding GoBackToMyListCommand}"
                              Visibility="{Binding AppBtnGoBackToMyListVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
                <AppBarButton
                    Visibility="{Binding AppBtnListSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Icon="Contact2" Label="List source">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="FlyoutListSource" Opened="FlyoutListSource_OnOpened">
                            <StackPanel>
                                <TextBlock VerticalAlignment="Center" Text="Username:" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="TxtListSource"
                                             Text="{x:Bind ViewModel.ListSource,Mode=TwoWay}" 
                                             Margin="5,5" KeyDown="ListSource_OnKeyDown" />
                                    <Button x:Name="AcceptListSourceBtn" Command="{Binding RefreshCommand}">
                                        <SymbolIcon Symbol="Accept" />
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton x:Name="AppBarButtonRefresh" Icon="Refresh" Label="Reload" Command="{Binding RefreshCommand}" Visibility="{Binding AppbarBtnPinTileVisibility,Converter={StaticResource BoolToVisibilityConverter}}"/>
            </CommandBar.SecondaryCommands>
            <AppBarButton Icon="Refresh" Label="Reload" Command="{Binding RefreshCommand}" Visibility="{Binding AppbarBtnPinTileVisibility,Converter={StaticResource BoolToVisibilityInvertedConverter}}"/>
            <AppBarButton Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <Flyout x:Name="ViewsFlyout">
                        <ListView ItemsSource="{Binding DisplayModes}"
                                  SelectedItem="{Binding CurrentlySelectedDisplayMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Height" Value="25" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Item2}" Height="25" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Calendar" Label="Select season"
                          Visibility="{Binding AppbarBtnPinTileVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FlyoutSeasonSelection">
                        <StackPanel>
                            <ListView ItemsSource="{Binding SeasonSelection}" SelectionMode="Single"
                                  SelectedIndex="{Binding SeasonalUrlsSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="{ThemeResource BrushHamburgerInnerBackground}"/>
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="MinHeight" Value="30"/>
                                        <Setter Property="Margin" Value="0,2"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="anime:AnimeSeason">
                                        <TextBlock Text="{x:Bind Name}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock Text="Custom season" Margin="0,5" HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <ComboBox ItemsSource="{Binding SeasonSeasons}" SelectedItem="{Binding CurrentlySelectedCustomSeasonSeason,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <ComboBox ItemsSource="{Binding SeasonYears}" SelectedItem="{Binding CurrentlySelectedCustomSeasonYear,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Click="ButtonCustomSeasonGo" Command="{Binding GoToCustomSeasonCommand}">
                                    <SymbolIcon Symbol="Go"></SymbolIcon>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Sort" Label="Order by" Visibility="{Binding AppBtnSortingVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                <AppBarButton.Flyout>
                    <MenuFlyout x:Name="SortingFlyout">
                        <ToggleMenuFlyoutItem x:Name="SortTitle" Text="Title" Click="SelectSortMode" />
                        <ToggleMenuFlyoutItem x:Name="SortScore" Text="Score" Click="SelectSortMode" />
                        <ToggleMenuFlyoutItem x:Name="Sort3" Text="{Binding Sort3Label}" Click="SelectSortMode" />
                        <ToggleMenuFlyoutItem x:Name="SortAiring" Text="Soonest airing" Click="SelectSortMode"
                                                      Visibility="{Binding SortAirDayVisibility}" />
                        <ToggleMenuFlyoutItem x:Name="SortLastWatched" Text="Last watched"
                                                      Click="SelectSortMode"
                                                      Visibility="{Binding HumApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
                        <ToggleMenuFlyoutItem x:Name="SortStartDate" Text="Start date"
                                                             Click="SelectSortMode"
                                                             Visibility="{Binding MalApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                                             CommandParameter="5"/>
                        <ToggleMenuFlyoutItem x:Name="SortEndDate" Text="End date"
                                                             Click="SelectSortMode"
                                                             Visibility="{Binding MalApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                                             CommandParameter="6"/>
                        <ToggleMenuFlyoutItem x:Name="SortNone" Text="None" Click="SelectSortMode" />
                        <MenuFlyoutSeparator />
                        <ToggleMenuFlyoutItem x:Name="BtnOrderDescending" Text="Decsending" Click="ChangeSortOrder" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FiltersFlyout">
                        <ListView
                            SelectedIndex="{Binding StatusSelectorSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Single">
                            <ListView.Items>
                                <ListViewItem Content="{Binding Filter1Label}" />
                                <ListViewItem Content="Completed" />
                                <ListViewItem Content="On hold" />
                                <ListViewItem Content="Dropped" />
                                <ListViewItem Content="{Binding Filter5Label}" />
                                <ListViewItem Content="{Binding StatusAllLabel}" />
                            </ListView.Items>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource BrushDeepBackground}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="TallItems">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="700"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GridViewWrapPanel.ItemHeight" Value="350"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState  x:Name="ShortItems">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GridViewWrapPanel.ItemHeight" Value="320"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <userControls:AlternatingListView x:Name="AnimeCompactItemsIndefinite" HorizontalAlignment="Stretch"
                                      Margin="3,1,-2,1" Padding="3,0,0,0"
                                      ItemsSource="{Binding AnimeCompactItems}" SelectionMode="Single"
                                      SelectionChanged="AnimesItemsIndefinite_OnSelectionChanged"
                                      ShowsScrollingPlaceholders="False"
                                      IsItemClickEnabled="True"
                                      Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteCompactListString}}">
            <userControls:AlternatingListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="2,0,0,0" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="Padding" Value="3,0,0,0" />
                </Style>
            </userControls:AlternatingListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Margin="0,0,16,0" Orientation="Vertical" HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100" />
                    <AddDeleteThemeTransition />
                    <ReorderThemeTransition />
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <items:AnimeCompactItem DataContext="{Binding}" DisplayContext="{Binding Source={StaticResource Locator},Path=AnimeList.AnimeItemsDisplayContext}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom"
                      Visibility="{Binding LoadMoreFooterVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More" />
                        </StackPanel>
                    </Button>
                </Grid>
            </ListView.Footer>
        </userControls:AlternatingListView>
        <ListView x:Name="AnimesItemsIndefinite" ItemsSource="{Binding AnimeListItems}"
                  SelectionChanged="AnimesItemsIndefinite_OnSelectionChanged" ShowsScrollingPlaceholders="False"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteListString}}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="5,5" />
                    <Setter Property="Margin" Value="0,5" />
                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="5,0,0,0" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100"/>
                    <AddDeleteThemeTransition/>
                    <ReorderThemeTransition/>
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <items:AnimeItem DataContext="{Binding}" DisplayContext="{Binding Source={StaticResource MobileLocator},Path=AnimeList.AnimeItemsDisplayContext}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="{Binding LoadMoreFooterVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </ListView.Footer>
        </ListView>
        <GridView x:Name="AnimesGridIndefinite" ItemsSource="{Binding AnimeGridItems}"
                  SelectionChanged="AnimesItemsIndefinite_OnSelectionChanged" HorizontalAlignment="Center"
                  ShowsScrollingPlaceholders="False"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteGridString}}">
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid x:Name="GridViewWrapPanel" Orientation="Horizontal" ItemHeight="320" ItemWidth="{Binding MaxWidth}"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <items:AnimeGridItem DataContext="{Binding}" DisplayContext="{Binding Source={StaticResource MobileLocator},Path=AnimeList.AnimeItemsDisplayContext}" />
                </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100"/>
                    <AddDeleteThemeTransition/>
                    <ReorderThemeTransition/>
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="{Binding LoadMoreFooterVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </GridView.Footer>
        </GridView>
        <StackPanel Margin="{Binding ElementName=AnimesPivot, Path=Margin}" HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock
                Visibility="{Binding EmptyNoticeVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                Text="{Binding EmptyNoticeContent}"
                TextWrapping="WrapWholeWords" TextAlignment="Center" Foreground="#FFB9B9B9" />
            <Button x:Name="BtnSetSource" Content="Set source" Margin="0,10,0,0" VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Visibility="{Binding BtnSetSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Click="ShowListSourceFlyout" />
        </StackPanel>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding Loading,Converter={StaticResource BoolToVisibilityConverter}}"
              Background="{ThemeResource BrushLoading}">
            <ProgressRing
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="100" Height="100"
                IsActive="True" />
        </Grid>
    </Grid>
</Page>